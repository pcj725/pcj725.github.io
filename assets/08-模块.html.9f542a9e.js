import{_ as i,o as c,c as l,a as n,b as e,e as a,d as s,r as t}from"./app.a23ae05c.js";const d={},r=a(`<h1 id="\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5757" aria-hidden="true">#</a> \u6A21\u5757</h1><h2 id="import-\u4E0E-export" tabindex="-1"><a class="header-anchor" href="#import-\u4E0E-export" aria-hidden="true">#</a> import \u4E0E export</h2><ol><li>\u4F7F\u7528\uFF08 <code>import </code>/ <code>export</code> \uFF09\u6A21\u5757\u800C\u4E0D\u662F\u975E\u6807\u51C6\u7684\u6A21\u5757\u7CFB\u7EDF\u3002</li></ol><blockquote><p>\u6A21\u5757\u5316\u662F\u672A\u6765\uFF0C\u8BA9\u6211\u4EEC\u73B0\u5728\u5C31\u5F00\u542F\u672A\u6765\u5427\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> AirbnbStyleGuide <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./AirbnbStyleGuide&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> AirbnbStyleGuide<span class="token punctuation">.</span>es6<span class="token punctuation">;</span>

<span class="token comment">// ok</span>
<span class="token keyword">import</span> AirbnbStyleGuide <span class="token keyword">from</span> <span class="token string">&#39;./AirbnbStyleGuide&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> AirbnbStyleGuide<span class="token punctuation">.</span>es6<span class="token punctuation">;</span>

<span class="token comment">// best</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> es6 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./AirbnbStyleGuide&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> es6<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),u={start:"2"},k=s("\u4E00\u4E2A\u8DEF\u5F84\u53EA "),m=n("code",null,"import",-1),v=s(" \u4E00\u6B21\u3002 eslint: "),b={href:"https://eslint.org/docs/latest/rules/no-duplicate-imports",target:"_blank",rel:"noopener noreferrer"},_=s("no-duplicate-imports"),h=a(`<blockquote><p>\u591A\u884C\u5BFC\u5165\u540C\u4E00\u8DEF\u5F84\u5C06\u4F7F\u4EE3\u7801\u53D8\u5F97\u96BE\u4EE5\u7EF4\u62A4\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> foo <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// \u2026 \u5176\u4ED6\u5BFC\u5165 \u2026 //</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> named1<span class="token punctuation">,</span> named2 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> foo<span class="token punctuation">,</span> <span class="token punctuation">{</span> named1<span class="token punctuation">,</span> named2 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u901A\u914D\u7B26" tabindex="-1"><a class="header-anchor" href="#\u901A\u914D\u7B26" aria-hidden="true">#</a> \u901A\u914D\u7B26</h2>`,3),y=s("\u4E0D\u8981\u7528 "),f=n("code",null,"import",-1),g=s(" \u901A\u914D\u7B26\uFF0C \u5373 "),x=n("code",null,"*",-1),w=s(" \u8FD9\u79CD\u65B9\u5F0F\u3002 "),j=a(`<blockquote><p>\u6A21\u5757\u5316\u662F\u672A\u6765\uFF0C\u8BA9\u6211\u4EEC\u73B0\u5728\u5C31\u5F00\u542F\u672A\u6765\u5427\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> AirbnbStyleGuide <span class="token keyword">from</span> <span class="token string">&#39;./AirbnbStyleGuide&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> AirbnbStyleGuide <span class="token keyword">from</span> <span class="token string">&#39;./AirbnbStyleGuide&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53EF\u53D8\u7684\u5185\u5BB9" tabindex="-1"><a class="header-anchor" href="#\u53EF\u53D8\u7684\u5185\u5BB9" aria-hidden="true">#</a> \u53EF\u53D8\u7684\u5185\u5BB9</h2>`,3),S=s("\u4E0D\u8981\u5BFC\u51FA\u53EF\u53D8\u7684\u4E1C\u897F\u3002 "),A=a(`<blockquote><p>\u53D8\u5316\u9700\u8981\u907F\u514D\uFF0C\u7279\u522B\u662F\u5F53\u8981\u8F93\u51FA\u53EF\u53D8\u7684\u7ED1\u5B9A\u65F6\u3002\u867D\u7136\u5728\u67D0\u4E9B\u573A\u666F\u4E0B\u53EF\u80FD\u9700\u8981\uFF0C\u4F46\u603B\u7684\u6765\u8BF4\u5E94\u8BE5\u5BFC\u51FA\u5E38\u91CF\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> foo <span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> foo <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function G(q,B){const p=t("ExternalLinkIcon"),o=t("Badge");return c(),l("div",null,[r,n("ol",u,[n("li",null,[k,m,v,n("a",b,[_,e(p)])])]),h,n("p",null,[y,f,g,x,w,e(o,{text:"\u5FC5\u8981"})]),j,n("p",null,[S,e(o,{text:"\u5FC5\u8981"})]),A])}var V=i(d,[["render",G],["__file","08-\u6A21\u5757.html.vue"]]);export{V as default};
