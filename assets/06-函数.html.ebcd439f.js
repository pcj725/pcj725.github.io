import{_ as p,o as i,c as l,a as n,b as a,d as s,e,r as c}from"./app.a23ae05c.js";const u={},r=n("h1",{id:"\u51FD\u6570",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u51FD\u6570","aria-hidden":"true"},"#"),s(" \u51FD\u6570")],-1),d=n("h2",{id:"\u521B\u5EFA",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u521B\u5EFA","aria-hidden":"true"},"#"),s(" \u521B\u5EFA")],-1),k=s("\u4F7F\u7528\u547D\u540D\u51FD\u6570\u8868\u8FBE\u5F0F\u800C\u4E0D\u662F\u51FD\u6570\u58F0\u660E\u3002 ESLint: "),m={href:"https://eslint.org/docs/rules/func-style.html",target:"_blank",rel:"noopener noreferrer"},v=s("func-style"),b=e(`<blockquote><p>\u51FD\u6570\u58F0\u660E\u4F1A\u53D1\u751F\u53D8\u91CF\u63D0\u5347</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),_={start:"2"},h=s("\u4E0D\u8981\u7528\u51FD\u6570\u6784\u9020\u5668\u521B\u5EFA\u51FD\u6570\u3002 ESLint: "),g={href:"https://eslint.org/docs/rules/no-new-func",target:"_blank",rel:"noopener noreferrer"},f=s("no-new-func"),x=e(`<blockquote><p>\u8FD9\u79CD\u65B9\u5F0F\u521B\u5EFA\u51FD\u6570\u7C7B\u4F3C\u4E8E\u5B57\u7B26\u4E32 <code>eval()</code>\uFF0C\u5B58\u5728\u6F0F\u6D1E\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">var</span> add <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;return a + b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// still bad</span>
<span class="token keyword">var</span> subtract <span class="token operator">=</span> <span class="token function">Function</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;return a - b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570" aria-hidden="true">#</a> \u53C2\u6570</h2>`,3),j=s("\u4E0D\u8981\u7528 arguments \u547D\u540D\u53C2\u6570 "),w=e(`<blockquote><p>\u5B83\u7684\u4F18\u5148\u7EA7\u9AD8\u4E8E\u6BCF\u4E2A\u51FD\u6570\u4F5C\u7528\u57DF\u81EA\u5E26\u7684 <code>arguments</code> \u5BF9\u8C61\uFF0C\u4F1A\u5BFC\u81F4\u51FD\u6570\u81EA\u5E26\u7684 <code>arguments</code> \u503C\u88AB\u8986\u76D6</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> options<span class="token punctuation">,</span> arguments</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> options<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),y={start:"2"},q=s("\u7528\u9ED8\u8BA4\u53C2\u6570\u8BED\u6CD5\u800C\u4E0D\u662F\u5728\u51FD\u6570\u91CC\u5BF9\u53C2\u6570\u91CD\u65B0\u8D4B\u503C "),E=e(`<blockquote><p>\u53CD\u659C\u7EBF\u53EF\u8BFB\u6027\u5DEE\uFF0C\u56E0\u6B64\u4EC5\u5F53\u5FC5\u8981\u65F6\u624D\u4F7F\u7528\u5B83\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">handleThings</span><span class="token punctuation">(</span><span class="token parameter">opts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4E0D\uFF01\u6211\u4EEC\u4E0D\u8BE5\u4FEE\u6539 arguments</span>
  <span class="token comment">// \u7B2C\u4E8C\uFF1A\u5982\u679C opts \u7684\u503C\u4E3A false, \u5B83\u4F1A\u88AB\u8D4B\u503C\u4E3A {}</span>
  <span class="token comment">// \u867D\u7136\u4F60\u60F3\u8FD9\u4E48\u5199\uFF0C\u4F46\u662F\u8FD9\u4E2A\u4F1A\u5E26\u6765\u4E00\u4E9B\u5FAE\u5999\u7684 bug\u3002</span>
  opts <span class="token operator">=</span> opts <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">handleThings</span><span class="token punctuation">(</span><span class="token parameter">opts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),B={start:"3"},L=s("\u4E0D\u8981\u5BF9\u53C2\u6570\u91CD\u65B0\u8D4B\u503C\u3002 ESLint: "),N={href:"https://eslint.org/docs/rules/no-param-reassign",target:"_blank",rel:"noopener noreferrer"},S=s("no-param-reassign"),V=e(`<blockquote><p>\u53C2\u6570\u91CD\u65B0\u8D4B\u503C\u4F1A\u5BFC\u81F4\u610F\u5916\u53D1\u751F\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  a <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> b <span class="token operator">=</span> a <span class="token operator">||</span> <span class="token number">1</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function T(F,I){const t=c("ExternalLinkIcon"),o=c("Badge");return i(),l("div",null,[r,d,n("ol",null,[n("li",null,[k,n("a",m,[v,a(t)])])]),b,n("ol",_,[n("li",null,[h,n("a",g,[f,a(t)])])]),x,n("ol",null,[n("li",null,[j,a(o,{text:"\u5FC5\u8981"})])]),w,n("ol",y,[n("li",null,[q,a(o,{text:"\u5FC5\u8981"})])]),E,n("ol",B,[n("li",null,[L,n("a",N,[S,a(t)])])]),V])}var z=p(u,[["render",T],["__file","06-\u51FD\u6570.html.vue"]]);export{z as default};
